//use for wa editor 0.96:

//Remove every glove limitation (having only 2, 4, 6)
appendASM("gloverem.asm");
patchJMP(0x3FA9E, "startgloverem");
addSymbol("endgloverem", 0x3FAA4);
patchJMP(0x3FAE7, "startgloverem2");
addSymbol("endgloverem2", 0x3FAEC);
patchJMP(0x3FB2D, "startgloverem3");
addSymbol("endgloverem3", 0x3FB33);
patchJMP(0x3FB76, "startgloverem4");
addSymbol("endgloverem4", 0x3FB7B);
patchJMP(0x3FBBC, "startgloverem5");
addSymbol("endgloverem5", 0x3FBC2);
patchJMP(0x3FC05, "startgloverem6");
addSymbol("endgloverem6", 0x3FC0A);
patchJMP(0x3FC4B, "startgloverem7");
addSymbol("endgloverem7", 0x3FC51);
patchJMP(0x3FC94, "startgloverem8");
addSymbol("endgloverem8", 0x3FC99);

//remove 0-15 limitation from spring, steppingstone(whatever that is), transporter, button(data0),,
//doors, keys, cages, firetraps, and color gates
appendASM("colorrem.asm");
patchJMP(0x40172, "startcolorrem");
addSymbol("endcolorrem", 0x40178);
patchJMP(0x40201, "startcolorrem2");
addSymbol("endcolorrem2", 0x40207);
patchJMP(0x4024A, "startcolorrem3");
addSymbol("endcolorrem3", 0x4024F);
//method 4, 5, 6 removes subcolor range
patchJMP(0x41866, "startcolorrem4");
addSymbol("endcolorrem4", 0x4186C);
patchJMP(0x418F5, "startcolorrem5");
addSymbol("endcolorrem5", 0x418FB);
patchJMP(0x4193E, "startcolorrem6");
addSymbol("endcolorrem6", 0x41943);
//method 7, 8 adds back white gem!
patchJMP(0x41E76, "startcolorrem7");
addSymbol("endcolorrem7", 0x41E7C);
patchJMP(0x41F4E, "startcolorrem8");
addSymbol("endcolorrem8", 0x41F53);

//remove 0-15, 0-4 limitations to the other parts of the button object
//color4
appendASM("buttonrem.asm");
patchJMP(0x44597, "startbuttonrem");
addSymbol("endbuttonrem", 0x4459D);
patchJMP(0x44626, "startbuttonrem2");
addSymbol("endbuttonrem2", 0x4462C);
patchJMP(0x4466F, "startbuttonrem3");
addSymbol("endbuttonrem3", 0x44674);
//color3
patchJMP(0x43079, "startbuttonrem4");
addSymbol("endbuttonrem4", 0x4307F);
patchJMP(0x43108, "startbuttonrem5");
addSymbol("endbuttonrem5", 0x4310E);
patchJMP(0x43151, "startbuttonrem6");
addSymbol("endbuttonrem6", 0x43156);
//color2
patchJMP(0x41A30, "startbuttonrem7");
addSymbol("endbuttonrem7", 0x41A36);
patchJMP(0x41ABF, "startbuttonrem8");
addSymbol("endbuttonrem8", 0x41AC5);
patchJMP(0x41B08, "startbuttonrem9");
addSymbol("endbuttonrem9", 0x41B0D);

//remove sub color 0-4 limitations in special cases (color changes, rotators, etc)
//subcolor4
appendASM("subbuttonrem.asm");
patchJMP(0x4792A, "startsubbuttonrem");
addSymbol("endsubbuttonrem", 0x47930);
patchJMP(0x479B9, "startsubbuttonrem2");
addSymbol("endsubbuttonrem2", 0x479BF);
patchJMP(0x47A02, "startsubbuttonrem3");
addSymbol("endsubbuttonrem3", 0x47A07);
//subcolor3
patchJMP(0x46D1A, "startsubbuttonrem");
addSymbol("endsubbuttonrem", 0x46D20);
patchJMP(0x46DA9, "startsubbuttonrem2");
addSymbol("endsubbuttonrem2", 0x46DAF);
patchJMP(0x46DF2, "startsubbuttonrem3");
addSymbol("endsubbuttonrem3", 0x46DF7);
//subcolor2
patchJMP(0x461A2, "startsubbuttonrem");
addSymbol("endsubbuttonrem", 0x461A8);
patchJMP(0x46231, "startsubbuttonrem2");
addSymbol("endsubbuttonrem2", 0x479BF);
patchJMP(0x4627A, "startsubbuttonrem3");
addSymbol("endsubbuttonrem3", 0x4627F);
//subcolor1
patchJMP(0x4576F, "startsubbuttonrem");
addSymbol("endsubbuttonrem", 0x45775);
patchJMP(0x457FE, "startsubbuttonrem2");
addSymbol("endsubbuttonrem2", 0x45804);
patchJMP(0x45847, "startsubbuttonrem3");
addSymbol("endsubbuttonrem3", 0x4584C);
//colorchangersub1
patchJMP(0x4327C, "startsubbuttonrem");
addSymbol("endsubbuttonrem", 0x43282);
patchJMP(0x4330B, "startsubbuttonrem2");
addSymbol("endsubbuttonrem2", 0x43311);
patchJMP(0x43354, "startsubbuttonrem3");
addSymbol("endsubbuttonrem3", 0x43359);
//colorchangersub2
patchJMP(0x4576F, "startsubbuttonrem");
addSymbol("endsubbuttonrem", 0x45775);
patchJMP(0x44829, "startsubbuttonrem2");
addSymbol("endsubbuttonrem2", 0x4482F);
patchJMP(0x44872, "startsubbuttonrem3");
addSymbol("endsubbuttonrem3", 0x44877);

//change camera controll X to S (WAXD to WASD)
patchBytes(0x59711, 0x1F);